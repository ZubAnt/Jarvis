<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="classJarvis_1_1Commands_1_1Command">
<title>Jarvis::Commands::Command class Reference</title>
<para>
    <programlisting>#include <link linkend="Command_8hpp">&lt;Command.hpp&gt;</link></programlisting>
</para>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef std::string  <link linkend="classJarvis_1_1Commands_1_1Command_1a8e32bca320a8add513e52687e8d7c577">scriptName</link><para><emphasis>Определяет тип для имени скрипта</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef std::string  <link linkend="classJarvis_1_1Commands_1_1Command_1ac3520f99a59e632385c39365e9fd6c47">argument</link><para><emphasis>Определяет тип для одного аргумента скрипта</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef std::initializer_list&lt; argument &gt;  <link linkend="classJarvis_1_1Commands_1_1Command_1a7a2b4a71ae5d4153618efd0f76e948b9">argumentsList</link><para><emphasis>Определяет тип для списка инициализации аргументов скрипта</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef std::vector&lt; argument &gt;  <link linkend="classJarvis_1_1Commands_1_1Command_1ae007ae7cc84d38085d3b29e8e6a501f4">argumentsVector</link><para><emphasis>Определяет тип для вектора аргументов скрипта</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef std::string  <link linkend="classJarvis_1_1Commands_1_1Command_1a7a1965747c99558c68e101e735fd0a3c">executeCommand</link><para><emphasis>Определяет тип для запускаемой команды</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="classJarvis_1_1Commands_1_1Command_1a5473be719a2a0bb9cb6144bf8303f27b">execute</link> (
const CommandType::commandType &amp; type, const scriptName &amp; script, const argumentsList arguments)<para><emphasis>Подготовка и отправка данных</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="classJarvis_1_1Commands_1_1Command_1a9e088e558d8489ddd3df7bf61023528f">terminalExecute</link> (
const argumentsVector &amp; arguments)<para><emphasis>Запускает команду</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>Класс, отвечающий за выполнение команд </para>
    </simplesect>
            <section xml:id="classJarvis_1_1Commands_1_1Command_1a8e32bca320a8add513e52687e8d7c577">
                <title>using Jarvis::Commands::Command::scriptName =  std::string</title> <emphasis>Определяет тип для имени скрипта</emphasis>
                
<para>std::string scriptName </para>

            </section>
            <section xml:id="classJarvis_1_1Commands_1_1Command_1ac3520f99a59e632385c39365e9fd6c47">
                <title>using Jarvis::Commands::Command::argument =  std::string</title> <emphasis>Определяет тип для одного аргумента скрипта</emphasis>
                
<para>std::string argument </para>

            </section>
            <section xml:id="classJarvis_1_1Commands_1_1Command_1a7a2b4a71ae5d4153618efd0f76e948b9">
                <title>using Jarvis::Commands::Command::argumentsList =  std::initializer_list&lt;argument&gt;</title> <emphasis>Определяет тип для списка инициализации аргументов скрипта</emphasis>
                
<para>std::initializer_list&lt;argument&gt; argumentsList </para>

            </section>
            <section xml:id="classJarvis_1_1Commands_1_1Command_1ae007ae7cc84d38085d3b29e8e6a501f4">
                <title>using Jarvis::Commands::Command::argumentsVector =  std::vector&lt;argument&gt;</title> <emphasis>Определяет тип для вектора аргументов скрипта</emphasis>
                
<para>std::vector&lt;argument&gt; argumentsVector </para>

            </section>
            <section xml:id="classJarvis_1_1Commands_1_1Command_1a7a1965747c99558c68e101e735fd0a3c">
                <title>using Jarvis::Commands::Command::executeCommand =  std::string</title> <emphasis>Определяет тип для запускаемой команды</emphasis>
                
<para>std::string executeCommand </para>

            </section>
            <section xml:id="classJarvis_1_1Commands_1_1Command_1a5473be719a2a0bb9cb6144bf8303f27b">
                <title>static void Jarvis::Commands::Command::execute (const CommandType::commandType &amp;type, const scriptName &amp;script, const argumentsList arguments={})</title> <emphasis>Подготовка и отправка данных</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Аргументы                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>type</entry>
                                <entry>
<para>Тип скрипта </para>
</entry>
                            </row>
                            <row>
                                <entry>script</entry>
                                <entry>
<para>Название скрипта </para>
</entry>
                            </row>
                            <row>
                                <entry>arguments</entry>
                                <entry>
<para>Список аргументов скрипта (по умолчанию пустой) Cтатический метод сбора данных и запуска команды </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="classJarvis_1_1Commands_1_1Command_1a9e088e558d8489ddd3df7bf61023528f">
                <title>static void Jarvis::Commands::Command::terminalExecute (const argumentsVector &amp;arguments)</title> <emphasis>Запускает команду</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Аргументы                        </title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>arguments</entry>
                                <entry>
<para>Список всех параметров, передаваемых для запуска команды Cтатический метод для запуска скрипта </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
</section>
